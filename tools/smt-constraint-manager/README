This plug-in implements a constraint manager for the Clang Static Analyzer
backed by the STP constraint solver:

https://sites.google.com/site/stpfastprover/STP-Fast-Prover


## Building

Please build and install STP first.

To build this plug-in, pass the path to the STP installation prefix to make(1):

    make ... STPPREFIX=/usr/local

Please note that CMake is not supported at this time.


## Usage

Use the plug-in like so (TODO: easier invocation):

   clang -Xclang -load -Xclang path/to/SMTConstraintManagerPlugin.dylib \
         -Xanalyzer -analyzer-constraints=smt \
         --analyze ...


## Future

This is an incomplete list.

### Changes to Clang

- Refactor the ConstraintManager base class to eliminate
    VerySimpleConstraintManager
- Remove StubSMTConstraintManager with plugin support for constraint managers
- Make SymIntExpr, IntSymExpr, SymSymExpr subclasses of a BinarySymExpr class,
    to simplify a number of redundancies
- Implement a UnarySymExpr for bitwise not (~) and unary minus (-) 
- Generate implicit SymbolCasts

### Changes to SMTConstraintManager

- Abstract away STP to allow other SMT solvers
- Verify the memory management of STPExprs
- Avoid constructing a SymExpr in VerySimpleConstraintManager::assumeSymExpr();
    it's nice, but the temporary SymExpr is never disposed of
- Reconsider use of container types; replace with LLVM's efficient containers
    where possible
- Improve readability with typedefs for complex types
- Replace ProgramStateTrait code with REGISTER_TRAIT_WITH_PROGRAMSTATE macro
- Stop using 'Axiom' and 'Constraint' interchangeably